<?php
/**
 */

namespace execut\crudFields\fields;


use execut\crudFields\TestCase;
use kartik\daterange\DateRangePicker;
use kartik\detail\DetailView;
use kartik\grid\GridView;
use yii\web\View;

class DateTest extends TestCase
{
    protected $oldView = null;
    public function setUp():void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->oldView = \yii::$app->view;
        $view = $this->getMockBuilder(View::class)->setMethods(['registerAssetBundle'])->getMock();
        $view->method('registerAssetBundle')->willReturn(true);
        \yii::$app->set('view', $view);
    }

    public function tearDown():void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        \yii::$app->set('view', $this->oldView);
    }

    public function testGetColumn() {
        $model = new Model();
        $field = new Date([
            'attribute' => 'name',
            'model' => $model,
        ]);
        $column = $field->getColumn();
        $this->assertArrayHasKey('filter', $column);
        $column['filter'] = preg_replace('/daterangepicker_[a-z\d]+/', '', $column['filter']);
        $this->assertEquals([
            'attribute' => 'name',
            'filter' => preg_replace('/daterangepicker_[a-z\d]+/', '', DateRangePicker::widget([
                'attribute' => 'name',
                'model' => $model,
                'convertFormat' =>true,
                'pluginOptions' => [
                    'locale' => ['format' =>'Y-m-d']
                ]
            ])),
            'format' => ['date', 'dd.MM.yy HH:mm'],
        ], $column);
    }

    public function testGetColumnWithTime() {
        $model = new Model();
        $field = new Date([
            'attribute' => 'name',
            'model' => $model,
            'isTime' => true,
        ]);
        $column = $field->getColumn();
        $this->assertArrayHasKey('filter', $column);
        $column['filter'] = preg_replace('/daterangepicker_[a-z\d]+/', '', $column['filter']);
        $this->assertEquals([
            'attribute' => 'name',
            'filter' => preg_replace('/daterangepicker_[a-z\d]+/', '', DateRangePicker::widget([
                'attribute' => 'name',
                'model' => $model,
                'convertFormat' =>true,
                'pluginOptions' => [
                    'timePicker' =>true,
                    'timePickerIncrement' =>15,
                    'locale' => ['format' =>'Y-m-d H:i:s']
                ]
            ])),
            'format' => ['date', 'dd.MM.yy HH:mm'],
        ], $column);
    }

    public function testGetField() {
        $model = new Model();
        $field = new Date([
            'attribute' => 'name',
            'model' => $model,
        ]);
        $this->assertEquals([
            'attribute' => 'name',
            'displayOnly' => true,
            'format' => ['date', 'dd.MM.yy HH:mm'],
            'viewModel' => $model,
            'editModel' => $model,
        ], $field->getField());
    }
}