<?php
/**
 * @author Mamaev Yuriy (eXeCUT)
 * @link https://github.com/execut
 * @copyright Copyright (c) 2020 Mamaev Yuriy (eXeCUT)
 * @license http://www.apache.org/licenses/LICENSE-2.0
 */
namespace execut\crudFields\fields;

use yii\base\Exception;
use yii\helpers\ArrayHelper;

/**
 * Field for integer numbers
 * @package execut\crudFields
 */
class NumberField extends Field
{
    /**
     * @var bool Is integer only values
     */
    public $integerOnly = false;
    /**
     * @var null|integer Minimum value
     */
    public $min = null;
    /**
     * @var null|integer Maximum value
     */
    public $max = 2147483647;
    /**
     * {@inheritDoc}
     */
    public function getField()
    {
        return ArrayHelper::merge(parent::getField(), [
            'options' => $this->getOptions(),
        ]);
    }
    /**
     * {@inheritDoc}
     * @throws Exception
     */
    public function rules()
    {
        if (empty($this->attribute)) {
            throw new Exception('Attribute is required for number field');
        }

        $rule = [$this->attribute, 'number', 'integerOnly' => $this->integerOnly, 'max' => $this->max];
        if ($this->min !== null) {
            $rule['min'] = $this->min;
        }

        return ArrayHelper::merge(parent::rules(), [
            $this->attribute . '_number' => $rule,
        ]);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultipleInputField()
    {
        $result = parent::getMultipleInputField(); // TODO: Change the autogenerated stub
        $result['options'] = $this->getOptions();

        return $result;
    }

    /**
     * @returns Field options
     * @return array
     */
    protected function getOptions(): array
    {
        return [
            'type' => 'number',
        ];
    }
}
